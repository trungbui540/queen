local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local plr = Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local giftRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("GiftItem")
local acceptRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("AcceptGift")
local removeRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("RemoveItem")
local Backpack = plr:FindFirstChild("Backpack")
local giftedCount = {}
local giftQueue = {}

-- Update character khi respawn
plr.CharacterAdded:Connect(function(newChar)
    character = newChar
    task.wait(1)
    Backpack = plr:FindFirstChild("Backpack")
end)


local function removeAllPetsFromPlots()
    local count = 0
    -- Loop qua t·∫•t c·∫£ plots
    for _, plot in pairs(workspace.Plots:GetChildren()) do
        local hitboxes = plot:FindFirstChild("Hitboxes")
        
        if hitboxes then
            -- Loop qua t·∫•t c·∫£ pet trong Hitboxes
            for _, pet in pairs(hitboxes:GetChildren()) do
                local success = pcall(function()
                    removeRemote:FireServer(pet.Name)
                end)
                
                if success then
                    print("üóëÔ∏è ƒê√£ x√≥a:", pet.Name, "t·ª´", plot.Name)
                    count = count + 1
                    task.wait(0.3)  -- Delay tr√°nh spam
                end
            end
        end
    end
end

removeAllPetsFromPlots()

-- Hook auto accept
local function hookAllRemotes()
    for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
        if obj:IsA("RemoteEvent") and obj.OnClientEvent then
            obj.OnClientEvent:Connect(function(...)
                local args = {...}
                for _, arg in pairs(args) do
                    if typeof(arg) == "table" and arg.ID and typeof(arg.ID) == "number" and arg.ID > 1000000000 then
                        table.insert(giftQueue, arg.ID)
                    end
                end
            end)
        end
    end
end

hookAllRemotes()

-- Auto accept loop
spawn(function()
    while task.wait(1) do
        if _G.CF.acceptGifts and #giftQueue > 0 then
            local giftID = table.remove(giftQueue, 1)
            pcall(function()
                acceptRemote:FireServer({ID = giftID})
                print("‚úÖ Accepted gift:", giftID)
            end)
        end
    end
end)

local function ToGift()
    local receivers = type(_G.CF.Receivers) == "table" and _G.CF.Receivers or {_G.CF.Receivers}
    local Humanoid = character:FindFirstChildOfClass("Humanoid")
    local totalSent = 0
    local COOLDOWN = _G.CF.giftCooldown or 10
    
    for _, receiverName in pairs(receivers) do
        local receiver = Players:FindFirstChild(receiverName)
        for _, petName in pairs(_G.CF.ListPetGift) do
            local foundPet = false
            
            for _, item in pairs(Backpack:GetChildren()) do
                if item:IsA("Tool") and string.find(item.Name:lower(), petName:lower()) then
                    foundPet = true
                    
                    task.wait(0.3)
                    
                    -- Equip pet
                    local equipSuccess = pcall(function()
                        Humanoid:EquipTool(item)
                    end)
                    task.wait(0.5)
                    
                    -- T√¨m tool trong character 
                    local petTool = character:FindFirstChildOfClass("Tool")
                    if petTool and string.find(petTool.Name:lower(), petName:lower()) then
                        -- G·ª¨I ƒê√öNG FORMAT
                        local args = {{Item = petTool, ToGift = receiverName}}
                        local success, err = pcall(function()
                            giftRemote:FireServer(unpack(args))
                        end)
                        
                        if success then
                            print("üì§ ƒê√É G·ª¨I:", petTool.Name, "cho", receiverName)
                            totalSent = totalSent + 1
                            
                            if not giftedCount[receiverName] then
                                giftedCount[receiverName] = {}
                            end
                            giftedCount[receiverName][petTool.Name] = (giftedCount[receiverName][petTool.Name] or 0) + 1
                            task.wait(COOLDOWN)
                        else
                            warn("‚ùå L·ªñI KHI G·ª¨I:", err)
                        end
                    else
                        warn("‚ö†Ô∏è Pet kh√¥ng ƒë∆∞·ª£c equip v√†o character")
                        if petTool then
                            print("  - Tool hi·ªán t·∫°i:", petTool.Name)
                        else
                            print("  - Kh√¥ng c√≥ tool n√†o trong character")
                        end
                    end
                    
                    break
                end
            end
            
            if not foundPet then
                warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y pet:", petName)
            end
        end
    end
    
    print("‚úÖ HO√ÄN T·∫§T! ƒê√£ g·ª≠i:", totalSent, "pet(s)")
end

local function isPetSender(playerName)
    if _G.CF and _G.CF.Receivers then
        local receivers = type(_G.CF.Receivers) == "table" and _G.CF.Receivers or {_G.CF.Receivers}
        return not table.find(receivers, playerName)
    else
        return true
    end
end



-- Auto send gift loop
spawn(function()
    while task.wait(5) do
        if _G.CF.autoSendGift then
            ToGift()
        end
    end
end)
